{
  "name": "bloody-promise",
  "repository": {
    "type": "git",
    "url": "https://github.com/bloodyowl/promise"
  },
  "issues": "https://github.com/bloodyowl/promise/issues",
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "0.2.1",
  "dependencies": {
    "bloody-class": "~1.1.0",
    "bloody-immediate": "~0.1.0"
  },
  "devDependencies": {
    "tape": "~2.3.2"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": {
      "ie": [
        6,
        7,
        8,
        9
      ],
      "firefox": [
        22,
        23,
        24,
        25
      ],
      "chrome": [
        28,
        29,
        30,
        31
      ],
      "safari": [
        4,
        5.1,
        6
      ],
      "opera": [
        10,
        11,
        12
      ],
      "iphone": [
        6
      ],
      "ipad": [
        6
      ]
    }
  },
  "readme": "# promise\n\n[![browser support](https://ci.testling.com/bloodyowl/promise.png)](https://ci.testling.com/bloodyowl/promise)\n\n## Install\n\n```\n$ npm install bloody-promise\n```\n\n## Require\n\n```javascript\nvar promise = require(\"bloody-promise\")\n```\n\n## API\n\n### `promise.create([fn]) -> promise`\n\nCreates a new promise and immediately executes `fn` (asynchronously) with the promise as first argument. \n\n### `promise.from([any]) -> promise`\n\nCreates a new promise based on the given value, or promise. If the argument is a value, promise is fulfilled. \n\n### `promise.createRejected([any]) -> promise`\n\nCreates a new rejected promise with `any` as reason.\n\n### `promise.then([successCallback][, rejectCallback]) -> new promise`\n\nAdds callbacks to `promise` and returns a new promise based on the return values of callbacks. \nIf a promise is returned from the executed callback, `new promise` will be `fulfilled` or `rejected` when this promise is `fulfilled` or `rejected`. \n\n### `promise.fulfill([value])`\n\nFulfills a promise with `value`\n\n### `promise.reject([reason])`\n\nRejects a promise with `reason`\n\n### `promise.all(array) -> new promise`\n\nCreates a promise resolved when all `array` promises are fulfilled. \nPromises in the array are converted through `promise.from`. \n",
  "readmeFilename": "README.md",
  "description": "[![browser support](https://ci.testling.com/bloodyowl/promise.png)](https://ci.testling.com/bloodyowl/promise)",
  "bugs": {
    "url": "https://github.com/bloodyowl/promise/issues"
  },
  "homepage": "https://github.com/bloodyowl/promise",
  "_id": "bloody-promise@0.2.1",
  "_from": "bloody-promise@"
}
